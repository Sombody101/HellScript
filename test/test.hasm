.program {}

ldfast [10_000_000]
newarr [-1] ; -1 tells the runtime to use the stack value as the length

ldfast [0]
stloc [0]

jmp [loop_check]

loop_body:
    ldloc [0]
    ldfast [1]
    add
    ; nop ; Jimmy rigged "print" (does not pop value)
    stloc [0]

loop_check:
    ldloc [0]
    ldfast [10_000_000]

    jlt [loop_body]

exit

; C# representation
; int[] local = new int[10_000];
; 
; for (int i = 0; i < 10_000; ++i)
; { }

; .NET ilasm representation
; IL_0000: ldc.i4 10000
; IL_0005: newarr [mscorlib]System.Int32
; IL_000a: pop
; IL_000b: ldc.i4.0
; IL_000c: stloc.0
; // sequence point: hidden
; IL_000d: br.s IL_0013
; // loop start (head: IL_0013)
;     IL_000f: ldloc.0
;     IL_0010: ldc.i4.1
;     IL_0011: add
;     IL_0012: stloc.0
;     
;     IL_0013: ldloc.0
;     IL_0014: ldc.i4 10000
;     IL_0019: blt.s IL_000f
; // end loop